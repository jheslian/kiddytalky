# Generated by Django 3.1.7 on 2021-04-17 10:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_parent', models.BooleanField(default=False)),
                ('is_child', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, default='', max_length=100)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('birthdate', models.DateTimeField(null=True)),
                ('native_language', models.CharField(default='', max_length=100)),
                ('hobbies', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('The Bahamas', 'The Bahamas'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cape Verde', 'Cape Verde'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo', 'Congo'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('East Timor ', 'East Timor '), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('The Gambia', 'The Gambia'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Honduras', 'Honduras'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea North', 'Korea North'), ('KoreaSouth', 'KoreaSouth'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macedonia', 'Macedonia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Swaziland', 'Swaziland'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('United States of America', 'United States of America'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Vatican City', 'Vatican City'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Afrikaans', 'Afrikaans'), ('Albanian', 'Albanian'), ('Amharic', 'Amharic'), ('Arabic - Egyptian Spoken', 'Arabic - Egyptian Spoken'), ('Arabic - Levantine', 'Arabic - Levantine'), ('Arabic - Modern Standard', 'Arabic - Modern Standard'), ('Arabic - Moroccan Spoken', 'Arabic - Moroccan Spoken'), ('Arabic - Overview', 'Arabic - Overview'), ('Aramaic', 'Aramaic'), ('Armenian', 'Armenian'), ('Assamese', 'Assamese'), ('Aymara', 'Aymara'), ('Azerbaijani', 'Azerbaijani'), ('Balochi', 'Balochi'), ('Bamanankan', 'Bamanankan'), ('Bashkort (Bashkir)', 'Bashkort (Bashkir)'), ('Basque', 'Basque'), ('Belarusan', 'Belarusan'), ('Bengali', 'Bengali'), ('Bhojpuri', 'Bhojpuri'), ('Bislama', 'Bislama'), ('Bosnian', 'Bosnian'), ('Brahui', 'Brahui'), ('Bulgarian', 'Bulgarian'), ('Burmese', 'Burmese'), ('Cantonese', 'Cantonese'), ('Catalan', 'Catalan'), ('Cebuano', 'Cebuano'), ('Chechen', 'Chechen'), ('Cherokee', 'Cherokee'), ('Croatian', 'Croatian'), ('Czech', 'Czech'), ('Dakota', 'Dakota'), ('Danish', 'Danish'), ('Dari', 'Dari'), ('Dholuo', 'Dholuo'), ('Dutch', 'Dutch'), ('English', 'English'), ('Esperanto', 'Esperanto'), ('Estonian', 'Estonian'), ('Éwé', 'Éwé'), ('Finnish', 'Finnish'), ('French', 'French'), ('Georgian', 'Georgian'), ('German', 'German'), ('Gikuyu', 'Gikuyu'), ('Greek', 'Greek'), ('Guarani', 'Guarani'), ('Gujarati', 'Gujarati'), ('Haitian Creole', 'Haitian Creole'), ('Hausa', 'Hausa'), ('Hawaiian', 'Hawaiian'), ('Hawaiian Creole', 'Hawaiian Creole'), ('Hebrew', 'Hebrew'), ('Hiligaynon', 'Hiligaynon'), ('Hindi', 'Hindi'), ('Hungarian', 'Hungarian'), ('Icelandic', 'Icelandic'), ('Igbo', 'Igbo'), ('Ilocano', 'Ilocano'), ('Indonesian ', 'Indonesian '), ('Inuit/Inupiaq', 'Inuit/Inupiaq'), ('Irish Gaelic', 'Irish Gaelic'), ('Italian', 'Italian'), ('Japanese', 'Japanese'), ('Jarai', 'Jarai'), ('Javanese', 'Javanese'), ('K’iche’', 'K’iche’'), ('Kabyle', 'Kabyle'), ('Kannada', 'Kannada'), ('Kashmiri', 'Kashmiri'), ('Kazakh', 'Kazakh'), ('Khmer', 'Khmer'), ('Khoekhoe', 'Khoekhoe'), ('Korean', 'Korean'), ('Kurdish', 'Kurdish'), ('Kyrgyz', 'Kyrgyz'), ('Lao', 'Lao'), ('Latin', 'Latin'), ('Latvian', 'Latvian'), ('Lingala', 'Lingala'), ('Lithuanian', 'Lithuanian'), ('Macedonian', 'Macedonian'), ('Maithili', 'Maithili'), ('Malagasy', 'Malagasy'), ('Malay', 'Malay'), ('Malayalam', 'Malayalam'), ('Mandarin ', 'Mandarin '), ('Marathi', 'Marathi'), ('Mende', 'Mende'), ('Mongolian', 'Mongolian'), ('Nahuatl', 'Nahuatl'), ('Navajo', 'Navajo'), ('Nepali', 'Nepali'), ('Norwegian', 'Norwegian'), ('Ojibwa', 'Ojibwa'), ('Oriya', 'Oriya'), ('Oromo', 'Oromo'), ('Pashto', 'Pashto'), ('Persian', 'Persian'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Punjabi', 'Punjabi'), ('Quechua', 'Quechua'), ('Romani', 'Romani'), ('Romanian', 'Romanian'), ('Russian', 'Russian'), ('Rwanda', 'Rwanda'), ('Samoan', 'Samoan'), ('Sanskrit', 'Sanskrit'), ('Serbian', 'Serbian'), ('Shona', 'Shona'), ('Sindhi', 'Sindhi'), ('Sinhala', 'Sinhala'), ('Slovak', 'Slovak'), ('Slovene', 'Slovene'), ('Somali', 'Somali'), ('Spanish', 'Spanish'), ('Swahili', 'Swahili'), ('Swedish', 'Swedish'), ('Tachelhit', 'Tachelhit'), ('Tagalog', 'Tagalog'), ('Tajiki', 'Tajiki'), ('Tamil', 'Tamil'), ('Tatar', 'Tatar'), ('Telugu', 'Telugu'), ('Thai', 'Thai'), ('Tibetic Languages', 'Tibetic Languages'), ('Tigrigna', 'Tigrigna'), ('Tok Pisin', 'Tok Pisin'), ('Turkish', 'Turkish'), ('Turkmen', 'Turkmen'), ('Ukrainian', 'Ukrainian'), ('Urdu', 'Urdu'), ('Uyghur', 'Uyghur'), ('Uzbek', 'Uzbek'), ('Vietnamese', 'Vietnamese'), ('Warlpiri', 'Warlpiri'), ('Welsh', 'Welsh'), ('Wolof', 'Wolof'), ('Xhosa', 'Xhosa'), ('Yakut', 'Yakut'), ('Yiddish', 'Yiddish'), ('Yoruba', 'Yoruba'), ('Yucatec', 'Yucatec'), ('Zapotec', 'Zapotec'), ('Zulu', 'Zulu')], max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('birthdate', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True)),
                ('country', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.country')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Languagetolearn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation_status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Completed', 'Completed')], default='Pending', max_length=10)),
                ('link_video', models.CharField(blank=True, default='', max_length=500)),
                ('meeting_id', models.IntegerField(default=0)),
                ('date_slot', models.DateField()),
                ('start_time_slot', models.TimeField()),
                ('end_time_slot', models.TimeField()),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_participant', to='main.child')),
                ('child_correspondent', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='child_correspondent', to='main.child')),
                ('correspondent_language', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, related_name='correspondent_language', to='main.language')),
                ('language', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='participant_language', to='main.language')),
            ],
        ),
        migrations.AddField(
            model_name='child',
            name='country',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.country'),
        ),
        migrations.AddField(
            model_name='child',
            name='language',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='main.language'),
        ),
        migrations.AddField(
            model_name='child',
            name='parent',
            field=models.ForeignKey(blank=True, default=0, on_delete=django.db.models.deletion.CASCADE, to='main.parent'),
        ),
        migrations.AddField(
            model_name='child',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
